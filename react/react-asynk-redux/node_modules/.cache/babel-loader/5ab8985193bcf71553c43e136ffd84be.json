{"ast":null,"code":"var _jsxFileName = \"/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/ContactsList/ContactsList.jsx\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = styled.li`\n    margin-top: ${p => p.theme.space[3]}px;\n`;\n_c = List;\nconst Btn = styled.button`\n    margin-left: ${p => p.theme.space[3]}px;\n    background-color: ${p => p.theme.colors.btn};\n    border: ${p => p.theme.borders.normal};\n    border-color:${p => p.theme.colors.btn};\n    border-radius: ${p => p.theme.radii.normal};\n    text-decoration: none;\n    color: ${p => p.theme.colors.bg};\n    :hover {\n        background-color: ${p => p.theme.colors.bg};\n        color: ${p => p.theme.colors.btn}\n      };\n\n`;\n_c2 = Btn;\n\nconst ContactsList = _ref => {\n  let {\n    getFilteredContacts,\n    deleteContacts\n  } = _ref;\n  const contact = getFilteredContacts.map(_ref2 => {\n    let {\n      id,\n      name,\n      number\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: [\" \", name, \": \", number, /*#__PURE__*/_jsxDEV(Btn, {\n        onClick: () => deleteContacts(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contact\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ContactsList;\nContactsList.propTypes = {\n  deleteContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }))\n};\nexport default ContactsList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"Btn\");\n$RefreshReg$(_c3, \"ContactsList\");","map":{"version":3,"sources":["/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/ContactsList/ContactsList.jsx"],"names":["PropTypes","styled","List","li","p","theme","space","Btn","button","colors","btn","borders","normal","radii","bg","ContactsList","getFilteredContacts","deleteContacts","contact","map","id","name","number","propTypes","func","isRequired","contacts","arrayOf","shape","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,EAAG;AACvB,kBAAkBC,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQC,KAAR,CAAc,CAAd,CAAiB;AACtC,CAFA;KAAMJ,I;AAGN,MAAMK,GAAG,GAAGN,MAAM,CAACO,MAAO;AAC1B,mBAAmBJ,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQC,KAAR,CAAc,CAAd,CAAiB;AACvC,wBAAwBF,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQI,MAAR,CAAeC,GAAI;AAC9C,cAAcN,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQM,OAAR,CAAgBC,MAAO;AACxC,mBAAmBR,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQI,MAAR,CAAeC,GAAI;AACzC,qBAAqBN,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQQ,KAAR,CAAcD,MAAO;AAC7C;AACA,aAAaR,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQI,MAAR,CAAeK,EAAG;AAClC;AACA,4BAA4BV,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQI,MAAR,CAAeK,EAAG;AACjD,iBAAiBV,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQI,MAAR,CAAeC,GAAI;AACvC;AACA;AACA,CAbA;MAAMH,G;;AAcN,MAAMQ,YAAY,GAAG,QAA0C;AAAA,MAAzC;AAACC,IAAAA,mBAAD;AAAsBC,IAAAA;AAAtB,GAAyC;AAC3D,QAAMC,OAAO,GAAGF,mBAAmB,CAACG,GAApB,CAAwB;AAAA,QAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA;AAAX,KAAD;AAAA,wBACpC,QAAC,IAAD;AAAA,sBAAiBD,IAAjB,QAAyBC,MAAzB,eACI,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,MAAKL,cAAc,CAACG,EAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA,OAAWA,EAAX;AAAA;AAAA;AAAA;AAAA,YADoC;AAAA,GAAxB,CAAhB;AAKA,sBACI;AAAA,cAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CATD;;MAAMH,Y;AAUNA,YAAY,CAACQ,SAAb,GAAyB;AACrBN,EAAAA,cAAc,EAAEjB,SAAS,CAACwB,IAAV,CAAeC,UADV;AAErBC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,KAAV,CAAgB;AACxCR,IAAAA,EAAE,EAAEpB,SAAS,CAAC6B,MAAV,CAAiBJ,UADmB;AAExCJ,IAAAA,IAAI,EAAErB,SAAS,CAAC6B,MAAV,CAAiBJ,UAFiB;AAGxCH,IAAAA,MAAM,EAAEtB,SAAS,CAAC6B,MAAV,CAAiBJ;AAHe,GAAhB,CAAlB;AAFW,CAAzB;AAQA,eAAeV,YAAf","sourcesContent":["import PropTypes from 'prop-types'; \nimport styled from 'styled-components';\n\nconst List = styled.li`\n    margin-top: ${p=>p.theme.space[3]}px;\n`\nconst Btn = styled.button`\n    margin-left: ${p=>p.theme.space[3]}px;\n    background-color: ${p=>p.theme.colors.btn};\n    border: ${p=>p.theme.borders.normal};\n    border-color:${p=>p.theme.colors.btn};\n    border-radius: ${p=>p.theme.radii.normal};\n    text-decoration: none;\n    color: ${p=>p.theme.colors.bg};\n    :hover {\n        background-color: ${p=>p.theme.colors.bg};\n        color: ${p=>p.theme.colors.btn}\n      };\n\n`\nconst ContactsList = ({getFilteredContacts, deleteContacts}) =>{\n    const contact = getFilteredContacts.map(({id, name, number})=>(\n        <List key={id}> {name}: {number} \n            <Btn onClick={()=> deleteContacts(id)}>Delete</Btn>\n        </List>\n    ));\n    return (\n        <ul>{contact}</ul>\n    );\n};\nContactsList.propTypes = {\n    deleteContacts: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }))\n};\nexport default ContactsList;"]},"metadata":{},"sourceType":"module"}