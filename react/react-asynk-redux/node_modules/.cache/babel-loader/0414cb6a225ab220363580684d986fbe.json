{"ast":null,"code":"var _jsxFileName = \"/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/ContactsList/ContactsList.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactsList = _ref => {\n  let {\n    contacts,\n    deleteContacts\n  } = _ref;\n  const contact = contacts.map(_ref2 => {\n    let {\n      id,\n      name,\n      number\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", name, \": \", number, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteContacts(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contact\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ContactsList;\nContactsList.propTypes = {\n  deleteContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }))\n};\nexport default ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/ContactsList/ContactsList.jsx"],"names":["PropTypes","ContactsList","contacts","deleteContacts","contact","map","id","name","number","propTypes","func","isRequired","arrayOf","shape","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAG,QAA+B;AAAA,MAA9B;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAA8B;AAChD,QAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAa;AAAA,QAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA;AAAX,KAAD;AAAA,wBACzB;AAAA,sBAAeD,IAAf,QAAuBC,MAAvB,eACI;AAAQ,QAAA,OAAO,EAAE,MAAKL,cAAc,CAACG,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA,OAASA,EAAT;AAAA;AAAA;AAAA;AAAA,YADyB;AAAA,GAAb,CAAhB;AAKA,sBACI;AAAA,cAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CATD;;KAAMH,Y;AAUNA,YAAY,CAACQ,SAAb,GAAyB;AACrBN,EAAAA,cAAc,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADV;AAErBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,KAAV,CAAgB;AACxCP,IAAAA,EAAE,EAAEN,SAAS,CAACc,MAAV,CAAiBH,UADmB;AAExCJ,IAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBH,UAFiB;AAGxCH,IAAAA,MAAM,EAAER,SAAS,CAACc,MAAV,CAAiBH;AAHe,GAAhB,CAAlB;AAFW,CAAzB;AAQA,eAAeV,YAAf","sourcesContent":["import PropTypes from 'prop-types'; \n\nconst ContactsList = ({contacts, deleteContacts}) =>{\n    const contact = contacts.map(({id, name, number})=>(\n        <li key={id}> {name}: {number} \n            <button onClick={()=> deleteContacts(id)}>Delete</button>\n        </li>\n    ));\n    return (\n        <ul>{contact}</ul>\n    );\n};\nContactsList.propTypes = {\n    deleteContacts: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }))\n};\nexport default ContactsList;"]},"metadata":{},"sourceType":"module"}