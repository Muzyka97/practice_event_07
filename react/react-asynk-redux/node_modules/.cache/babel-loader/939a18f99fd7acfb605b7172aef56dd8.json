{"ast":null,"code":"var _jsxFileName = \"/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/PhoneBook.jsx\",\n    _s = $RefreshSig$();\n\n// import React,{Component} from \"react\";\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from \"./Form\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport Section from \"components/Section\";\nimport { Box } from '../Box/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneBook = () => {\n  _s();\n\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts); // parsedContacts?.length like default value.\n\n    if (parsedContacts !== null && parsedContacts !== void 0 && parsedContacts.length) {\n      setContacts(parsedContacts);\n    }\n\n    ;\n  }, []);\n  useEffect((prevProps, prevState) => {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n\n    ;\n  }, [contacts]); // const addContact = (data) => {\n  //     const {contacts} = this.state;\n  //     const dublicate = contacts.find(contact=> contact.name === data.name)\n  //     if(dublicate){\n  //         alert(`${data.name} is already in name list`);\n  //     }else{\n  //         this.setState(prevState => {\n  //             const { contacts } = prevState;\n  //             const { name, number } = data;\n  //             const newContact = {\n  //                 name,\n  //                 number,\n  //                 id: nanoid() \n  //             };\n  //             return {\n  //                 contacts: [...contacts, newContact],\n  //                 name: \"\",\n  //                 number: \"\",\n  //             };\n  //         });\n  //     };\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ml: \"20px\",\n    mt: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"PhoneBook\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        border: 'normal',\n        paddingLeft: \"8px\",\n        paddingRight: \"40px\",\n        paddingTop: \"8px\",\n        paddingBottom: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Contacts\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        paddingLeft: \"8px\",\n        paddingRight: \"40px\",\n        paddingTop: \"8px\",\n        paddingBottom: \"40px\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          filter: filter,\n          changeFilter: changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n          contacts: contacts,\n          deleteContacts: deleteContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhoneBook, \"/8z3635nB1QsZGJ1mUnOPpBKHB4=\");\n\n_c = PhoneBook;\nexport default PhoneBook; // class PhoneBook extends Component{\n//     state = {\n//         contacts: [\n//             {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//             {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//             {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//             {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//         ],\n//         filter: '',\n//     };\n//     addContact = (data) => {\n//         const {contacts} = this.state;\n//         const dublicate = contacts.find(contact=> contact.name === data.name)\n//         if(dublicate){\n//             alert(`${data.name} is already in name list`);\n//         }else{\n//             this.setState(prevState => {\n//                 const { contacts } = prevState;\n//                 const { name, number } = data;\n//                 const newContact = {\n//                     name,\n//                     number,\n//                     id: nanoid() \n//                 };\n//                 return {\n//                     contacts: [...contacts, newContact],\n//                     name: \"\",\n//                     number: \"\",\n//                 };\n//             });\n//         };\n//     };\n//     deleteContacts = (id) => {\n//         this.setState(prevState =>{\n//            const  {contacts} = prevState;\n//            return{\n//             contacts: contacts.filter(contact => contact.id !== id)\n//            }\n//         })\n//     };\n//     changeFilter = ({target}) =>{\n//         this.setState({\n//             filter: target.value\n//         });\n//     };\n//     getFilteredContacts() {\n//         const { filter, contacts } = this.state;\n//         if (!filter) {\n//             return contacts \n//         }\n//         const filterText = filter.toLowerCase();\n//         const filterContacts = contacts.filter(({ name }) => {\n//             const result = name.toLowerCase().includes(filterText);\n//             return result\n//         })\n//         return filterContacts;\n//     };\n//     componentDidMount(){\n//         const contacts = localStorage.getItem(\"contacts\");\n//         const parsedContacts = JSON.parse(contacts);\n//         // parsedContacts?.length like default value.\n//         if(parsedContacts?.length){\n//             this.setState({contacts: parsedContacts})\n//         };\n//     };\n//     componentDidUpdate(prevProps, prevState){\n//         if(this.state.contacts !== prevState.contacts){\n//             localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//         };\n//     };\n//     render(){\n//      const {filter} = this.state\n//     const { addContact, deleteContacts, changeFilter } = this\n//     const contacts = this.getFilteredContacts()\n//     return(\n//         <Box\n//         ml='20px'\n//         mt='20px'>\n//             <Section title=\"PhoneBook\">\n//                 <Box\n//                 border={'normal'}\n//                 paddingLeft='8px'\n//                 paddingRight='40px'\n//                 paddingTop='8px'\n//                 paddingBottom=\"20px\">\n//                     <Form onSubmit={addContact}/>\n//                 </Box>\n//             </Section>\n//             <Section title='Contacts'>\n//                 <Box\n//                     paddingLeft='8px'\n//                     paddingRight='40px'\n//                     paddingTop='8px'\n//                     paddingBottom=\"40px\">\n//                     <Filter filter={filter} changeFilter={changeFilter}/>\n//                     <ContactsList contacts={contacts} deleteContacts={deleteContacts}/>\n//                 </Box>\n//             </Section>\n//         </Box>\n//     )\n//     }\n// };\n// export default PhoneBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneBook\");","map":{"version":3,"sources":["/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/PhoneBook.jsx"],"names":["useState","useEffect","nanoid","Form","ContactsList","Filter","Section","Box","PhoneBook","filter","setFilter","contacts","setContacts","localStorage","getItem","parsedContacts","JSON","parse","length","prevProps","prevState","state","setItem","stringify","addContact","changeFilter","deleteContacts"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,GAAR,QAAkB,YAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,QAAQ,GAAGE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAX,CAAvB,CAFU,CAGV;;AACA,QAAGI,cAAH,aAAGA,cAAH,eAAGA,cAAc,CAAEG,MAAnB,EAA0B;AACtBN,MAAAA,WAAW,CAACG,cAAD,CAAX;AACH;;AAAA;AACJ,GAPQ,EAOP,EAPO,CAAT;AASAd,EAAAA,SAAS,CAAC,CAACkB,SAAD,EAAYC,SAAZ,KAAwB;AAC9B,QAAG,KAAKC,KAAL,CAAWV,QAAX,KAAwBS,SAAS,CAACT,QAArC,EAA8C;AAC1CE,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACO,SAAL,CAAe,KAAKF,KAAL,CAAWV,QAA1B,CAAjC;AACH;;AAAA;AACJ,GAJQ,EAIP,CAACA,QAAD,CAJO,CAAT,CAbmB,CAkBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,GAAD;AACA,IAAA,EAAE,EAAC,MADH;AAEA,IAAA,EAAE,EAAC,MAFH;AAAA,4BAGI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,6BACI,QAAC,GAAD;AACA,QAAA,MAAM,EAAE,QADR;AAEA,QAAA,WAAW,EAAC,KAFZ;AAGA,QAAA,YAAY,EAAC,MAHb;AAIA,QAAA,UAAU,EAAC,KAJX;AAKA,QAAA,aAAa,EAAC,MALd;AAAA,+BAMI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEa;AAAhB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAaI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,UAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,WAAW,EAAC,KADhB;AAEI,QAAA,YAAY,EAAC,MAFjB;AAGI,QAAA,UAAU,EAAC,KAHf;AAII,QAAA,aAAa,EAAC,MAJlB;AAAA,gCAKI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEf,MAAhB;AAAwB,UAAA,YAAY,EAAEgB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,YAAD;AAAc,UAAA,QAAQ,EAAEd,QAAxB;AAAkC,UAAA,cAAc,EAAEe;AAAlD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CApED;;GAAMlB,S;;KAAAA,S;AAqEN,eAAeA,SAAfsourcesContent":["// import React,{Component} from \"react\";\nimport {useState,useEffect} from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Form from \"./Form\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport Section from \"components/Section\";\nimport {Box} from '../Box/Box';\n\nconst PhoneBook = () =>{\n    const [filter, setFilter] = useState('');\n    const [contacts, setContacts] = useState([]);\n\n    useEffect(()=>{\n        const contacts = localStorage.getItem(\"contacts\");\n        const parsedContacts = JSON.parse(contacts);\n        // parsedContacts?.length like default value.\n        if(parsedContacts?.length){\n            setContacts(parsedContacts)\n        };\n    },[])\n\n    useEffect((prevProps, prevState)=>{\n        if(this.state.contacts !== prevState.contacts){\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n        };\n    },[contacts])\n    // const addContact = (data) => {\n    //     const {contacts} = this.state;\n    //     const dublicate = contacts.find(contact=> contact.name === data.name)\n    //     if(dublicate){\n    //         alert(`${data.name} is already in name list`);\n    //     }else{\n    //         this.setState(prevState => {\n    //             const { contacts } = prevState;\n    //             const { name, number } = data;\n    //             const newContact = {\n    //                 name,\n    //                 number,\n    //                 id: nanoid() \n    //             };\n\n    //             return {\n    //                 contacts: [...contacts, newContact],\n    //                 name: \"\",\n    //                 number: \"\",\n    //             };\n    //         });\n    //     };\n    // };\n\n    return(\n        <Box\n        ml='20px'\n        mt='20px'>\n            <Section title=\"PhoneBook\">\n                <Box\n                border={'normal'}\n                paddingLeft='8px'\n                paddingRight='40px'\n                paddingTop='8px'\n                paddingBottom=\"20px\">\n                    <Form onSubmit={addContact}/>\n                </Box>\n            </Section>\n            <Section title='Contacts'>\n                <Box\n                    paddingLeft='8px'\n                    paddingRight='40px'\n                    paddingTop='8px'\n                    paddingBottom=\"40px\">\n                    <Filter filter={filter} changeFilter={changeFilter}/>\n                    <ContactsList contacts={contacts} deleteContacts={deleteContacts}/>\n                </Box>\n            </Section>\n        </Box>\n    )\n};\nexport default PhoneBook;\n\n// class PhoneBook extends Component{\n//     state = {\n//         contacts: [\n//             {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//             {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//             {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//             {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//         ],\n//         filter: '',\n//     };\n\n//     addContact = (data) => {\n//         const {contacts} = this.state;\n//         const dublicate = contacts.find(contact=> contact.name === data.name)\n//         if(dublicate){\n//             alert(`${data.name} is already in name list`);\n//         }else{\n//             this.setState(prevState => {\n//                 const { contacts } = prevState;\n//                 const { name, number } = data;\n//                 const newContact = {\n//                     name,\n//                     number,\n//                     id: nanoid() \n//                 };\n\n//                 return {\n//                     contacts: [...contacts, newContact],\n//                     name: \"\",\n//                     number: \"\",\n//                 };\n//             });\n//         };\n//     };\n\n\n//     deleteContacts = (id) => {\n//         this.setState(prevState =>{\n//            const  {contacts} = prevState;\n//            return{\n//             contacts: contacts.filter(contact => contact.id !== id)\n//            }\n//         })\n//     };\n\n//     changeFilter = ({target}) =>{\n//         this.setState({\n//             filter: target.value\n//         });\n//     };\n\n//     getFilteredContacts() {\n//         const { filter, contacts } = this.state;\n//         if (!filter) {\n//             return contacts \n//         }\n//         const filterText = filter.toLowerCase();\n//         const filterContacts = contacts.filter(({ name }) => {\n//             const result = name.toLowerCase().includes(filterText);\n//             return result\n//         })\n//         return filterContacts;\n//     };\n//     componentDidMount(){\n//         const contacts = localStorage.getItem(\"contacts\");\n//         const parsedContacts = JSON.parse(contacts);\n//         // parsedContacts?.length like default value.\n//         if(parsedContacts?.length){\n//             this.setState({contacts: parsedContacts})\n//         };\n//     };\n\n//     componentDidUpdate(prevProps, prevState){\n//         if(this.state.contacts !== prevState.contacts){\n//             localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//         };\n//     };\n\n//     render(){\n//      const {filter} = this.state\n//     const { addContact, deleteContacts, changeFilter } = this\n//     const contacts = this.getFilteredContacts()\n//     return(\n//         <Box\n//         ml='20px'\n//         mt='20px'>\n//             <Section title=\"PhoneBook\">\n//                 <Box\n//                 border={'normal'}\n//                 paddingLeft='8px'\n//                 paddingRight='40px'\n//                 paddingTop='8px'\n//                 paddingBottom=\"20px\">\n//                     <Form onSubmit={addContact}/>\n//                 </Box>\n//             </Section>\n//             <Section title='Contacts'>\n//                 <Box\n//                     paddingLeft='8px'\n//                     paddingRight='40px'\n//                     paddingTop='8px'\n//                     paddingBottom=\"40px\">\n//                     <Filter filter={filter} changeFilter={changeFilter}/>\n//                     <ContactsList contacts={contacts} deleteContacts={deleteContacts}/>\n//                 </Box>\n//             </Section>\n//         </Box>\n//     )\n//     }\n// };\n\n// export default PhoneBook;"]},"metadata":{},"sourceType":"module"}