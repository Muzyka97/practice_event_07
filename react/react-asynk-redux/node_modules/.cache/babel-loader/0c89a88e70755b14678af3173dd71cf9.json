{"ast":null,"code":"var _jsxFileName = \"/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/PhoneBook.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport Form from \"./Form\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PhoneBook extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = data => {\n      const {\n        contacts\n      } = this.state;\n      const dublicate = contacts.find(contact => contact.name === data.name);\n\n      if (dublicate) {\n        alert(`${data.name} is already in contacts`);\n      }\n\n      ;\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        const {\n          name,\n          number\n        } = data;\n        const newContact = {\n          name,\n          number,\n          id: nanoid()\n        };\n        return {\n          contacts: [...contacts, newContact],\n          name: \"\",\n          number: \"\"\n        };\n      });\n    };\n\n    this.deleteContacts = id => {\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        return {\n          contacts: contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n\n    this.changeFilter = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        filter: target.value\n      });\n    };\n  }\n\n  getFilteredContacts() {\n    const {\n      filter,\n      contacts\n    } = this.state;\n\n    if (!filter) {\n      return contacts;\n    }\n\n    const filterText = filter.toLowerCase();\n    const filterContacts = contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      const result = name.toLowerCase().includes(filterText);\n      return result;\n    });\n    return filterContacts;\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const {\n      addContact,\n      deleteContacts,\n      changeFilter\n    } = this;\n    const contacts = this.getFilteredContacts();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        changeFilter: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        contacts: contacts,\n        deleteContacts: deleteContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default PhoneBook;","map":{"version":3,"sources":["/Users/katerynamuzyka/Documents/studing/react-phoneBook/src/components/PhoneBook/PhoneBook.jsx"],"names":["React","Component","nanoid","Form","ContactsList","Filter","PhoneBook","state","contacts","id","name","number","filter","addContact","data","dublicate","find","contact","alert","setState","prevState","newContact","deleteContacts","changeFilter","target","value","getFilteredContacts","filterText","toLowerCase","filterContacts","result","includes","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport { nanoid } from 'nanoid';\n\n\nimport Form from \"./Form\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\n\nclass PhoneBook extends Component{\n    state = {\n        contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n        ],\n        filter: '',\n    };\n\n    addContact = (data) => {\n        const {contacts} = this.state;\n        const dublicate = contacts.find(contact=> contact.name === data.name)\n        if(dublicate){\n            alert(`${data.name} is already in contacts`)\n        };\n        this.setState(prevState => {\n            const { contacts } = prevState;\n            const { name, number } = data;\n            const newContact = {\n                name,\n                number,\n                id: nanoid() \n            };\n\n            return {\n                contacts: [...contacts, newContact],\n                name: \"\",\n                number: \"\",\n            };\n        });\n    };\n\n\n    deleteContacts = (id) => {\n        this.setState(prevState =>{\n           const  {contacts} = prevState;\n           return{\n            contacts: contacts.filter(contact => contact.id !== id)\n           }\n        })\n    };\n\n    changeFilter = ({target}) =>{\n        this.setState({\n            filter: target.value\n        });\n    };\n\n    getFilteredContacts() {\n        const { filter, contacts } = this.state;\n        if (!filter) {\n            return contacts \n        }\n        const filterText = filter.toLowerCase();\n        const filterContacts = contacts.filter(({ name }) => {\n            const result = name.toLowerCase().includes(filterText);\n            return result\n        })\n        return filterContacts;\n    };\n\n    render(){\n     const {filter} = this.state\n    const { addContact, deleteContacts, changeFilter } = this\n    const contacts = this.getFilteredContacts()\n    return(\n        <>\n        <Form onSubmit={addContact}/>\n        <Filter filter={filter} changeFilter={changeFilter}/>\n        <ContactsList contacts={contacts} deleteContacts={deleteContacts}/>\n        </>\n    )\n    }\n        \n      \n};\nexport default PhoneBook;"]},"metadata":{},"sourceType":"module"}